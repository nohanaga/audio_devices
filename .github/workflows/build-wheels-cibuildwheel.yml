name: Build Wheels with cibuildwheel

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.16.2

    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        # Python 3.8-3.11をサポート
        CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-*"
        # macOSでの両方のアーキテクチャ（Intel + Apple Silicon）をサポート
        CIBW_ARCHS_MACOS: "x86_64 arm64"
        # テストコマンド（絵文字を避けてWindowsエンコーディングエラーを回避）
        CIBW_TEST_COMMAND: "python -c \"import audio_devices; print('Import successful')\""
    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}
        path: ./wheelhouse/*.whl

  # upload_pypi:
  #   name: Upload to PyPI
  #   needs: [build_wheels]
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'release' && github.event.action == 'published'
  #   
  #   steps:
  #   - name: Download all artifacts
  #     uses: actions/download-artifact@v4
  #     with:
  #       path: dist
  #       merge-multiple: true

  #   - name: Publish to PyPI
  #     uses: pypa/gh-action-pypi-publish@release/v1
  #     with:
  #       password: ${{ secrets.PYPI_API_TOKEN }}

  upload_release:
    name: Upload to GitHub Release
    needs: [build_wheels]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        merge-multiple: true

    - name: Upload release assets
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*.whl
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  combine_artifacts:
    name: Combine all wheel artifacts
    needs: [build_wheels]
    runs-on: ubuntu-latest
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist
        merge-multiple: true

    - name: List all wheels
      run: |
        echo "All built wheels:"
        ls -la dist/

    - name: Upload combined wheels
      uses: actions/upload-artifact@v4
      with:
        name: all-wheels
        path: dist/*.whl
