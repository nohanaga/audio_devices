name: Build Wheels

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build_wheels:
    name: Build wheel on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build wheel setuptools

    - name: Install platform-specific dependencies (macOS)
      if: runner.os == 'macOS'
      run: |
        # macOS用の追加依存関係があれば追加

    - name: Install platform-specific dependencies (Windows)
      if: runner.os == 'Windows'
      run: |
        # Windows用のVisual Studio Build Toolsは既にインストール済み

    - name: Install platform-specific dependencies (Linux)
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libasound2-dev

    - name: Build wheel
      run: |
        echo "Building wheel..."
        python -m build --wheel
        echo "Build completed. Exit code: $?"

    - name: List built files
      run: |
        echo "Contents of dist directory:"
        ls -la dist/

    - name: Test wheel installation
      run: |
        # 実際に存在するwheelファイルを確認してからインストール
        wheel_files=(dist/*.whl)
        if [ -e "${wheel_files[0]}" ]; then
          echo "Installing wheel: ${wheel_files[0]}"
          pip install "${wheel_files[0]}"
          python -c "import audio_devices; print('✅ Import successful')"
        else
          echo "❌ No wheel files found in dist/"
          echo "Available files in dist/:"
          ls -la dist/ || echo "dist/ directory does not exist"
          exit 1
        fi

    - name: Upload wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name: wheels-${{ matrix.os }}-py${{ matrix.python-version }}
        path: dist/*.whl


